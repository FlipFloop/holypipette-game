* Replace wait until still by wait until target reached (with deadline)
* Detect when devices are not on
* Refactor automatic patch
* Calibrate without stage
    axes directions
    move Z down until floor, careful when going back
    stop when out of screen
* Refactor calibration: calibrate => calibrate without stage, then compensation movements
* Check compensation movements (matrix)
* Check whether best match is with the Z border (+- 8)
* Semiautomatic calibration:
    user goes to 4 points, reposition pipette, possibly automatically (template matching)
* Paramecium stuff
    1) Approach above coverslip
    2) Move right above
    3) Go down (slowly?)
    save floor Z

* Adjust speeds for horizontal moves
* Motor ranges using Home and Setting Home direction
* Maximization of calibration size
    (alternatively: abort when CalibrationError)
    check stage target position
* Possible optimization: instead of sleep before snap, do the template matching until stable results

** Automatically move and focus pipette when appearing on screen
    ideas: if tip on screen, look at how total intensity changes with focus
    In fact: move pipette up along X axis until there is no black on one border, or intensity
    disappears quickly. Then move up along Z axis until template matching works.

** Semiautomatic recalibration:
    pipette is put in approximate focus, then template matching (requires storing photos of pipette)
* DLL Path in multiclamp
* Resistance in status bar
* Safe move: add withdraw with correct direction
